name: CD

on:
  push:
    branches: [main]
    # paths:
    #   - '.github/workflows/sample-ping.yml'

env:
  ENABLE_DOWNLOADS_FROM_ARTIFACTORY: false # Optional variable to enable Artifactory downloads
  ALPINE_IMAGE_NAME: my-docker-image
  ALPINE_BUILDER_PATH: ./docker/

jobs:
  check-connectivity:
    needs: download-artifact
    runs-on: self-hosted

    steps: 
      - name: Check out repository
        uses: actions/checkout@v3

      # - name: run docker container
      #   run: docker run --name my-docker-container -d my-docker-image "tail -f /dev/null"
      
          
      # - name: Install Netcat
      #   run: |
      #     if [ -x "$(command -v apk)" ]; then
      #       apk add --no-cache netcat-openbsd
      #     elif [ -x "$(command -v apt-get)" ]; then
      #       sudo apt-get update && sudo apt-get install -y netcat
      #     elif [ -x "$(command -v yum)" ]; then
      #       sudo yum install -y nc
      #     else
      #       echo "Package manager not supported. Unable to install netcat."
      #      exit 1
      #     fi
      - name: Install Netcat
        run: |
          echo "Starting Docker container..."
          docker run --rm -v "$(pwd)":/workspace -w /workspace my-docker-image:latest bash -c "
          if [ -x "$(command -v apk)" ]; then
            apk add --no-cache netcat-openbsd
          elif [ -x "$(command -v apt-get)" ]; then
            sudo apt-get update && sudo apt-get install -y netcat
          elif [ -x "$(command -v yum)" ]; then
            sudo yum install -y nc
          else
            echo "Package manager not supported. Unable to install netcat."
          exit 1
          fi"

      # - name: Ping IP's
      #   run: |
      #    #  starting to ping the ips
      #     IFS=','; for IP in $IP_LIST; do
      #       echo "Checking connectivity to $IP by ping..."

      #       if ping -c 5 "$IP" ; then
      #         echo "✅ Connectivity to $IP via ping exists."
      #       else
      #         echo "❌ Cannot connect to $IP via ping. Please check network/firewall settings."
      #         ALL_SUCCESS=false
      #       fi
      #     done 
