name: CD

on:
  push:
    branches: [main]
    # paths:
    #   - '.github/workflows/sample-ping.yml'

env:
  ENABLE_DOWNLOADS_FROM_ARTIFACTORY: false # Optional variable to enable Artifactory downloads

jobs:
  create-image:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build the Docker Alpine Image
        run: |
          echo "Building the Docker image..."
          docker build -t $ALPINE_IMAGE_NAME $ALPINE_BUILDER_PATH 

      - name: check docker images
        run: docker images

      - name: Save Docker image
        run: |
          docker save my-docker-image:latest -o my-docker-image.tar

      - name: Upload Docker image
        uses: actions/upload-artifact@v3
        with:
          name: my-docker-image
          path: my-docker-image.tar

  download-artifact:
    needs: create-image
    runs-on: self-hosted

    steps:

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
        with:
          name: my-docker-image

      - name: Load Docker image
        run: |
          docker load -i my-docker-image.tar

  check-docker-image:
    needs: download-artifact
    runs-on: self-hosted
    container:
      image: my-docker-image:latest

    steps: 
      - name: Check out repository
        uses: actions/checkout@v3

      - name: check docker images
        run: docker images
      
      # - name : check ns-lookup
      #   run: |
      #    # nslookup google.com
      #    ping -c 4 8.8.8.8
          
      # - name: Install Netcat
      #   run: |
      #     if [ -x "$(command -v apk)" ]; then
      #       apk add --no-cache netcat-openbsd
      #     elif [ -x "$(command -v apt-get)" ]; then
      #       sudo apt-get update && sudo apt-get install -y netcat
      #     elif [ -x "$(command -v yum)" ]; then
      #       sudo yum install -y nc
      #     else
      #       echo "Package manager not supported. Unable to install netcat."
      #      exit 1
      #     fi
          
      # - name: Ping IP's
      #   run: |
      #    #  starting to ping the ips
      #     IFS=','; for IP in $IP_LIST; do
      #       echo "Checking connectivity to $IP by ping..."

      #       if ping -c 5 "$IP" ; then
      #         echo "✅ Connectivity to $IP via ping exists."
      #       else
      #         echo "❌ Cannot connect to $IP via ping. Please check network/firewall settings."
      #         ALL_SUCCESS=false
      #       fi
      #     done 
